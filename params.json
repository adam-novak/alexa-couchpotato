{
  "name": "Alexa-couchpotato",
  "tagline": "A skill to ask Alexa about your Couch Potato queue.",
  "body": "# Couch Potato Alexa Skill\r\n\r\nThis is a skill built for Amazon's Alexa service that tells you about your Couch Potato queue. It\r\nallows you to ask Alexa the following:\r\n\r\n> Alexa, ask Couch Potato to add The Godfather\r\n\r\n> Alexa, ask Couch Potato if The Dark Knight is on the list\r\n\r\nIf you're just getting started developing skills for Alexa, I'd recommend reading [Getting Started\r\nwith the Alexa Skills\r\nKit](https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/getting-started-guide) and\r\n[Developing an Alexa Skill as a Lambda\r\nFunction](https://developer.amazon.com/public/solutions/alexa/alexa-skills-kit/docs/developing-an-alexa-skill-as-a-lambda-function) to get familiar with the process.\r\n\r\n## Configuring The Skill\r\n\r\nTo configure the skill, copy `default.env` to `.env` and fill in the correct values for `CP_URL`, which\r\nshould point to your Couch Potato server, and `CP_API_KEY` which should have your server's API key.\r\n\r\n## Testing The Skill Locally\r\n\r\nYou can use [node-lambda](https://github.com/motdotla/node-lambda) to test this skill locally. In\r\nthe `test_events` directory are several event files you can use for testing, and they should map\r\npretty well to each Intent. To test an intent, simply copy the contents of one of the json files in\r\nthat directory and overwrite the contents of `event.json`. Then run `node-lambda run` from the\r\ncommand line.\r\n\r\n## Setting up the Skill\r\n\r\nTo set up the skill, head on over to [Alexa skills kit\r\ndevelopment console](https://developer.amazon.com/edw/home.html) and add a new skill. Fill in the\r\nbasic skill information however you choose. For Endpoint, you'll need to fill in your Lambda ARN\r\nwhich you'll get in the next step. Next, head on over to Interaction Model. In the Intent\r\nSchema field, copy and paste the contents of the `interaction_model/intent_schema.json` file. Then\r\nin the Sample Utterances field, copy and paste the contents of\r\n`interaction_model/sample_utterances.txt`.\r\n\r\n## Hosting the Skill\r\n\r\nThe skill is built to be easily hosted on Amazon's [AWS\r\nLambda service](https://aws.amazon.com/lambda/). Create your Lambda function (using the\r\nalexa-skills-kit-color-expert blueprint) and make sure you choose Node.js as the runtime. After\r\nyou've created your Lambda function, look at the top right of the page to get your Lambda ARN\r\nnumber and put that in the Alexa Skill Information Endpoint field.\r\n\r\nTo deploy to Lambda, first makes sure you do an `npm install` at the root of the project.\r\nOnce all the dependencies are installed, run `npm run bundle`, which will create a lambda.zip file.\r\nYou can then upload that zip file to Lambda for use in your function and skill.\r\n\r\nYou can also use [node-lambda](https://github.com/motdotla/node-lambda) to deploy to your Lambda\r\nfunction directly from the command line. Simply add a deploy.env file with your environment\r\nconfiguration (and double check the supplied .env file in this repository) and then run\r\n`node-lambda deploy`. Please visit the [node-lambda](https://github.com/motdotla/node-lambda)\r\nproject page for more information on deploying from the command line.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}